<?xml version="1.0" encoding="UTF-8"?>
<Project>

  <PropertyGroup>
    <PowerAppsComponentType>PluginPackage</PowerAppsComponentType>
  </PropertyGroup>

  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);AddProjectReferenceOutputAssemblyToPackageOutput</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <!-- This target is called to gather OutputPath property set in project file to be copied in a Project Reference -->
  <Target Name="GetProjectOutputPath" Returns="@(ProjectOutputPath)">
    <CallTarget Targets="_GetOutputItemsFromPack">
      <Output TaskParameter="TargetOutputs" ItemName="PluginPackageOutputPath"/>
    </CallTarget>

    <ItemGroup>
      <ProjectOutputPath Include="@(PluginPackageOutputPath->WithMetadataValue('Extension', '.nupkg'))">
        <PackageId>$(PackageId)</PackageId>
        <PackageVersion>$(PackageVersion)</PackageVersion>
        <PowerAppsComponentType>$(PowerAppsComponentType)</PowerAppsComponentType>
      </ProjectOutputPath>
    </ItemGroup>
  </Target>

  <Target Name="AddProjectReferenceOutputAssemblyToPackageOutput"
    DependsOnTargets="ResolveReferences"
  >
    <ItemGroup>
      <_ProjectReferencePackable Include="@(ProjectReference->WithMetadataValue('Pack', 'true'))" />
      <_ProjectReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))">
        <PossibleProjectReferencePackableItemSpec>%(_ProjectReferencePackable.Identity)</PossibleProjectReferencePackableItemSpec>
      </_ProjectReferenceCopyLocalPaths>
    </ItemGroup>

    <ItemGroup>
      <BuildOutputInPackage Include="@(_ProjectReferenceCopyLocalPaths->ClearMetadata())"
        Condition="'%(_ProjectReferenceCopyLocalPaths.ProjectReferenceOriginalItemSpec)' == '%(_ProjectReferenceCopyLocalPaths.PossibleProjectReferencePackableItemSpec)'"
      >
        <ReferenceSourceTarget>ProjectReference</ReferenceSourceTarget>
      </BuildOutputInPackage>
    </ItemGroup>
  </Target>

</Project>
